@model PagedList.IPagedList<IdentityTutorial.Models.Downtime>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Index";
}

<h2>Downtime Information</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm("Index", "Downtime", FormMethod.Get))
{
    <p>
        Search: @Html.TextBox("searchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<table class="table table-responsive">
    <tr>
        <th>
            @Html.ActionLink("Username", "Index", new { sortOrder = ViewBag.UserSortParm })
        </th>
        <th>
            @Html.ActionLink("Plant Type", "Index", new { sortOrder = ViewBag.PlantSortParm })
        </th>
        <th>
            @Html.ActionLink("Shift Type", "Index", new { sortOrder = ViewBag.ShiftSortParm })
        </th>
        <th>
            @Html.ActionLink("Downtime Type", "Index", new { sortOrder = ViewBag.DownTypeSortParm })
        </th>
        <th>
            @Html.ActionLink("Duration", "Index", new { sortOrder = ViewBag.DurationSortParm })
        </th>
        <th>
            Reason
        </th>
        <th>
            Action
        </th>
        <td>
            Start Time
        </td>
        <td>
            End Time
        </td>
        <td>
            Total Mins
        </td>
        <th>
            @Html.ActionLink("Date", "Index", new { sortOrder = ViewBag.DateSortParm })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.User.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DowntimeType.Plant.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Shift.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DowntimeType.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Reason)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Action)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TotalDownMins)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.DowntimeID }) |
                @Html.ActionLink("Details", "Details", new { id = item.DowntimeID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.DowntimeID })
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

<div>
    @Html.ActionLink("Back to Homepage", "Index", "Home")
</div>